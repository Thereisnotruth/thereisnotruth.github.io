{"version":3,"file":"component---src-pages-archive-js-f01dd2e886ef0a9b990a.js","mappings":"8KA8GA,UAtGoB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACfC,EAAO,GACPC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC1C,MAAO,MAAO,MAAO,MAAO,OAC5CF,EAAKG,OAAOC,MAAMC,KAAI,SAACC,GAErB,IAAMC,EAAOD,EAAKE,YAAYP,KAAKQ,MAAM,KAAK,GACxCC,EAAQJ,EAAKE,YAAYP,KAAKQ,MAAM,KAAK,GACzCE,EAAML,EAAKE,YAAYP,KAAKQ,MAAM,KAAK,QAC1BG,IAAfX,EAAKM,IACPN,EAAKM,GAAQ,GACbN,EAAKM,GAAMG,GAAS,GACpBT,EAAKM,GAAMG,GAAOC,GAAO,CAACL,SACKM,IAAtBX,EAAKM,GAAMG,IACpBT,EAAKM,GAAMG,GAAS,GACpBT,EAAKM,GAAMG,GAAOC,GAAO,CAACL,SACUM,IAA3BX,EAAKM,GAAMG,GAAOC,GAC3BV,EAAKM,GAAMG,GAAOC,GAAO,CAACL,GAE1BL,EAAKM,GAAMG,GAAOC,GAAKE,KAAKP,MAyDhC,OACE,gBAAC,IAAD,KACE,uBAAKQ,UAAU,QACb,qCACA,uBAAKA,UAAU,WA1DJ,WACf,IAAMC,EAAM,GADS,WAGZR,GACPQ,EAAIF,KACF,uBACEC,UAAU,eACVE,IAAKT,GAEJA,IATc,eAYVG,GACPK,EAAIF,KACJ,uBACEC,UAAU,gBACVE,IAAKT,EAAKU,OAAOP,IAEhBR,EAAOQ,EAAQ,KAlBD,eAoBRC,GACPI,EAAIF,KACV,uBACQC,UAAU,cACVE,IAAKT,EAAKU,OAAOP,GAAOO,OAAON,IAE9BA,IAGHV,EAAKM,GAAMG,GAAOC,GAAKN,KAAI,SAACC,EAAMY,GACnB,IAAVA,GACDH,EAAIF,KACJ,uBACEC,UAAU,cACVE,IAAKT,EAAKU,OAAOP,GAAOO,OAAON,GAAKM,OAAOC,MAG/CH,EAAIF,KACF,gBAAC,EAAAM,KAAD,CACEL,UAAU,OACVM,GAAE,MAAQd,EAAKe,MACf,uBACEP,UAAU,gBACVE,IAAKT,EAAKU,OAAOP,GAAOO,OAAON,GAAKM,OAAOC,GAAOD,OAAOX,EAAKE,YAAYc,MAEzEhB,EAAKE,YAAYe,aAzB5B,IAAK,IAAIZ,KAAOV,EAAKM,GAAMG,GAAS,EAA3BC,IARX,IAAK,IAAID,KAAST,EAAKM,GAAQ,EAAtBG,IATX,IAAK,IAAIH,KAAQN,EAAO,EAAfM,GAiDT,OAAOQ,EAOAS","sources":["webpack://gatsby-starter-default/./src/pages/archive.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport \"../styles/card.css\"\nimport \"../styles/archive.css\"\n\nconst ArchivePage = ({ data }) => {\n  const date = {};\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                  \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  data.allMdx.nodes.map((node) => {\n    \n    const year = node.frontmatter.date.split('.')[0];\n    const month = node.frontmatter.date.split('.')[1];\n    const day = node.frontmatter.date.split('.')[2];\n    if (date[year] === undefined) {\n      date[year] = {};\n      date[year][month] = {};\n      date[year][month][day] = [node];\n    } else if (date[year][month] === undefined) {\n      date[year][month] = {};\n      date[year][month][day] = [node];\n    } else if (date[year][month][day] === undefined) {\n      date[year][month][day] = [node];\n    } else {\n      date[year][month][day].push(node);\n    }\n  });\n  const showDate = () => {\n    const ret = [];\n    \n    for (let year in date) { \n      ret.push(\n        <div\n          className=\"archive-year\"\n          key={year}\n        >\n          {year}\n        </div>);\n      \n      for (let month in date[year]) {\n        ret.push(\n        <div\n          className=\"archive-month\"\n          key={year.concat(month)}\n        >\n          {months[month - 1]}\n        </div>);\n        for (let day in date[year][month]) {\n          ret.push(\n\t\t  <div\n            className=\"archive-day\"\n            key={year.concat(month).concat(day)}\n          >\n            {day}\n          </div>)\n          \n          date[year][month][day].map((node, index) => {\n            if(index !== 0) {\n              ret.push(\n              <div\n                className=\"archive-day\"\n                key={year.concat(month).concat(day).concat(index)}\n              />)\n            }\n            ret.push(\n              <Link\n                className=\"link\"\n                to={`../${node.slug}`}>\n                <div\n                  className=\"archive-title\"\n                  key={year.concat(month).concat(day).concat(index).concat(node.frontmatter.idx)}\n                >\n                  {node.frontmatter.title}\n                </div>\n              </Link>)\n          });\n        }\n      }\n    }\n    return ret;\n  }\n  return (\n    <Layout>\n      <div className=\"card\">\n        <h2>Archive</h2>\n        <div className=\"archive\">\n          {showDate()}\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query {\n    allMdx(sort: {fields: frontmatter___idx, order: DESC}) {\n      nodes {\n        id\n        slug\n        frontmatter {\n          title\n          date(formatString: \"YYYY.MM.DD\")\n          idx\n        }\n      }\n    }\n  }\n`\nexport default ArchivePage\n"],"names":["data","date","months","allMdx","nodes","map","node","year","frontmatter","split","month","day","undefined","push","className","ret","key","concat","index","Link","to","slug","idx","title","showDate"],"sourceRoot":""}