{"version":3,"file":"component---src-pages-archive-js-a6ab62b358ba6541049a.js","mappings":"8KA+GA,UAvGoB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACfC,EAAO,GACPC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC1C,MAAO,MAAO,MAAO,MAAO,OAC5CF,EAAKG,OAAOC,MAAMC,KAAI,SAACC,GACrBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAKI,YAAYT,KAAKU,MAAM,KAAK,GACxCC,EAAQN,EAAKI,YAAYT,KAAKU,MAAM,KAAK,GACzCE,EAAMP,EAAKI,YAAYT,KAAKU,MAAM,KAAK,QAC1BG,IAAfb,EAAKQ,IACPR,EAAKQ,GAAQ,GACbR,EAAKQ,GAAMG,GAAS,GACpBX,EAAKQ,GAAMG,GAAOC,GAAO,CAACP,IACIQ,MAArBb,EAAKQ,GAAMG,IACpBX,EAAKQ,GAAMG,GAAS,GACpBX,EAAKQ,GAAMG,GAAOC,GAAO,CAACP,SACUQ,IAA3Bb,EAAKQ,GAAMG,GAAOC,GAC3BZ,EAAKQ,GAAMG,GAAOC,GAAO,CAACP,GAE1BL,EAAKQ,GAAMG,GAAOC,GAAKE,KAAKT,MAGhCC,QAAQC,IAAIP,GAuDZ,OACE,gBAAC,IAAD,KACE,uBAAKe,UAAU,QACb,qCACA,uBAAKA,UAAU,WA1DJ,WACf,IAAMC,EAAM,GAEZ,IAAK,IAAIR,KAAQR,EASf,IAAK,IAAIW,KARTK,EAAIF,KACF,uBACEC,UAAU,eACVE,IAAKT,GAEJA,IAGaR,EAAKQ,GASrB,IAAK,IAAII,KARTI,EAAIF,KACJ,uBACEC,UAAU,gBACVE,IAAKN,GAEJV,EAAOU,EAAQ,KAGFX,EAAKQ,GAAMG,GACzBK,EAAIF,KAAK,uBACPC,UAAU,cACVE,IAAKL,GAEJA,IAGHZ,EAAKQ,GAAMG,GAAOC,GAAKR,KAAI,SAACC,EAAMa,GACnB,IAAVA,GACDF,EAAIF,KACJ,uBACEC,UAAU,cACVE,IAAKC,KAGTF,EAAIF,KACF,gBAAC,EAAAK,KAAD,CACEJ,UAAU,OACVK,GAAE,MAAQf,EAAKgB,MACf,uBACEN,UAAU,gBACVE,IAAKZ,EAAKI,YAAYa,KAErBjB,EAAKI,YAAYc,YAOhC,OAAOP,EAOAQ","sources":["webpack://gatsby-starter-default/./src/pages/archive.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport \"../styles/card.css\"\nimport \"../styles/archive.css\"\n\nconst ArchivePage = ({ data }) => {\n  const date = {};\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n                  \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  data.allMdx.nodes.map((node) => {\n    console.log(node)\n    const year = node.frontmatter.date.split('.')[0];\n    const month = node.frontmatter.date.split('.')[1];\n    const day = node.frontmatter.date.split('.')[2];\n    if (date[year] === undefined) {\n      date[year] = {};\n      date[year][month] = {};\n      date[year][month][day] = [node];\n    } else if (date[year][month] == undefined) {\n      date[year][month] = {};\n      date[year][month][day] = [node];\n    } else if (date[year][month][day] === undefined) {\n      date[year][month][day] = [node];\n    } else {\n      date[year][month][day].push(node);\n    }\n  })\n  console.log(date);\n  const showDate = () => {\n    const ret = [];\n    \n    for (let year in date) { \n      ret.push(\n        <div\n          className=\"archive-year\"\n          key={year}\n        >\n          {year}\n        </div>);\n      \n      for (let month in date[year]) {\n        ret.push(\n        <div\n          className=\"archive-month\"\n          key={month}\n        >\n          {months[month - 1]}\n        </div>);\n        \n        for (let day in date[year][month]) {\n          ret.push(<div\n            className=\"archive-day\"\n            key={day}\n          >\n            {day}\n          </div>)\n          \n          date[year][month][day].map((node, index) => {\n            if(index !== 0) {\n              ret.push(\n              <div\n                className=\"archive-day\"\n                key={index}\n              />)\n            }\n            ret.push(\n              <Link\n                className=\"link\"\n                to={`../${node.slug}`}>\n                <div\n                  className=\"archive-title\"\n                  key={node.frontmatter.idx}\n                >\n                  {node.frontmatter.title}\n                </div>\n              </Link>)\n          });\n        }\n      }\n    }\n    return ret;\n  }\n  return (\n    <Layout>\n      <div className=\"card\">\n        <h2>Archive</h2>\n        <div className=\"archive\">\n          {showDate()}\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query {\n    allMdx(sort: {fields: frontmatter___idx, order: DESC}) {\n      nodes {\n        id\n        slug\n        frontmatter {\n          title\n          date(formatString: \"YYYY.MM.DD\")\n          idx\n        }\n      }\n    }\n  }\n`\nexport default ArchivePage\n"],"names":["data","date","months","allMdx","nodes","map","node","console","log","year","frontmatter","split","month","day","undefined","push","className","ret","key","index","Link","to","slug","idx","title","showDate"],"sourceRoot":""}