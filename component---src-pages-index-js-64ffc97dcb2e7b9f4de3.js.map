{"version":3,"file":"component---src-pages-index-js-64ffc97dcb2e7b9f4de3.js","mappings":"mJA4BA,IAvBiB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzC,OACE,uBAAKC,UAAU,YAAYC,MAAO,CAACC,OAAQH,IACzC,0BACGD,EAAYK,OAEf,uBAAKH,UAAU,qBACZH,GAEH,uBAAKG,UAAU,kBACZF,EAAYM,MAEf,uBAAKJ,UAAU,sBACZF,EAAYO,a,mCC8DrB,IA1EmB,SAAC,GAIlB,IAJsE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACjDC,EAAWC,KAAKC,KAAKR,EAAQC,GAC7BQ,EAAQ,GACVC,EAAM,EACDC,EAAI,EAAGA,GAAKL,EAAUK,IACzBA,EAAI,IAAO,GACbF,EAAMG,KAAK,IAEbH,EAAMC,GAAKE,KAAKD,GACZA,EAAI,IAAO,GACbD,IAIJ,IAAMG,EAAO,SAACV,EAAMD,GAClBY,SAASC,uBAAuB,SAAS,GAAGC,SAAS,EAAG,GACxDX,EAAQF,GACRC,EAAQF,IAEV,OACE,uBAAKR,UAAU,cACb,0BACEA,UAAU,4BACVuB,QAAS,kBAAMJ,EAAK,EAAG,IACvBK,SAAmB,IAAThB,GAHZ,SAOA,0BACER,UAAU,oBACVuB,QAAS,kBAAMJ,EAAKV,EAAO,EAAgC,IAA5BI,KAAKC,KAAKN,EAAO,IAAM,KACtDgB,SAAmB,IAATf,GAHZ,KAQEM,EAAMN,EAAO,GACZgB,KAAI,SAACR,GAAD,OACH,0BACEjB,UAAU,oBACV0B,IAAKT,EAAI,EACTM,QAAS,kBAAMJ,EAAKV,EAAMQ,IAC1B,eAAcT,IAASS,EAAI,OAAS,MAEnCA,MAGP,0BACEjB,UAAU,oBACVuB,QAAS,kBAAMJ,EAAKV,EAAO,EAA0B,GAAvBI,KAAKC,KAAKN,EAAO,IAAW,IAC1DgB,SAAUf,IAASM,EAAMY,QAH3B,KAOA,0BACE3B,UAAU,2BACVuB,QAAS,kBAAMJ,EAAKJ,EAAMY,OAAQf,IAClCY,SAAUhB,IAASI,GAHrB,W,kFCQN,UA3DkB,SAAC,GAAc,IAAZgB,EAAW,EAAXA,KACnB,EAAwBC,EAAAA,SAAe,GAAhCrB,EAAP,KAAaE,EAAb,KACA,EAAwBmB,EAAAA,SAAe,GAAhCpB,EAAP,KAAaE,EAAb,KAEMmB,EADQ,IACEtB,EAAO,GAEjBuB,EAAQH,EAAKI,OAAOC,MAAMC,MAAK,SAACC,EAAIC,GACzC,OAAIC,OAAOF,EAAGrC,YAAYkB,KAAOqB,OAAOD,EAAGtC,YAAYkB,MAC9C,EAED,KAIT,OACE,gBAAC,IAAD,KAEIe,EACCO,MAAMR,EAAQA,EAfP,IAgBPL,KAAI,SAACc,EAAMC,GAAP,OACH,gBAAC,EAAAC,KAAD,CAAMzC,UAAU,OAAO0C,GAAIH,EAAKI,KAAMjB,IAAKc,GACzC,gBAAC,IAAD,CACE1C,YAAayC,EAAKzC,aAEjByC,EAAKK,aAKd,gBAAC,IAAD,CACEtC,MAAOyB,EAAMJ,OACbpB,MA5BQ,GA6BRC,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTC,QAASA","sources":["webpack://gatsby-starter-default/./src/components/list_card.js","webpack://gatsby-starter-default/./src/components/pagination.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"../styles/list_card.css\"\n\nconst ListCard = ({ children, frontmatter, size }) => {\n  return (\n    <div className=\"list-card\" style={{height: size}}>\n      <h2>\n        {frontmatter.title}\n      </h2>\n      <div className=\"list-card-content\">\n        {children}\n      </div>\n      <div className=\"list-card-date\">\n        {frontmatter.date}\n      </div>\n      <div className=\"list-card-category\">\n        {frontmatter.category}\n      </div>\n    </div>\n  )\n}\n\nListCard.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default ListCard\n\n","\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"../styles/pagination.css\"\n\nconst Pagination = ({ total, limit, page, line, setPage, setLine }) => {\n  const numPages = Math.ceil(total / limit);\n  const pages = [];\n  let idx = 0;\n  for (let i = 1; i <= numPages; i++) {\n    if (i % 10 === 1) {\n      pages.push([]);\n    }\n    pages[idx].push(i);\n    if (i % 10 === 0) {\n      idx++;\n    }\n  }\n\n  const move = (line, page) => {\n    document.getElementsByClassName(\"right\")[0].scrollTo(0, 0);\n    setLine(line);\n    setPage(page);\n  }\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"pagination-button-tofirst\"\n        onClick={() => move(1, 1)}\n        disabled={page === 1}\n      >\n        First\n      </button>\n      <button\n        className=\"pagination-button\"\n        onClick={() => move(line - 1, (Math.ceil(page / 10) - 1) * 10)}\n        disabled={line === 1}\n      >\n        &lt;\n      </button>\n      {\n        pages[line - 1]\n        .map((i) => (\n          <button\n            className=\"pagination-button\"\n            key={i + 1}\n            onClick={() => move(line, i)}\n            aria-current={page === i ? \"page\" : null}\n          >\n            {i}\n          </button>\n        ))}\n      <button\n        className=\"pagination-button\"\n        onClick={() => move(line + 1, Math.ceil(page / 10) * 10 + 1)}\n        disabled={line === pages.length}\n      >\n        &gt;\n      </button>\n      <button\n        className=\"pagination-button-tolast\"\n        onClick={() => move(pages.length, numPages)}\n        disabled={page === numPages}\n      >\n        Last\n      </button>\n    </div>\n  )\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  limit: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  line: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  setLine: PropTypes.func.isRequired,\n}\n\nexport default Pagination\n\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport ListCard from \"../components/list_card\"\nimport Pagination from \"../components/pagination\"\n\nimport \"../styles/home.css\"\n\nconst IndexPage = ({ data }) => {\n  const [page, setPage] = React.useState(1);\n  const [line, setLine] = React.useState(1);\n  const limit = 10;\n  const offset = (page - 1) * limit;\n  \n  const posts = data.allMdx.nodes.sort((o1, o2) => {\n\t  if (Number(o1.frontmatter.idx) > Number(o2.frontmatter.idx)) {\n\t\t  return -1;\n\t  } else {\n\t\t  return 1;\n\t  }\n  });\n  \n  return (\n    <Layout>\n      {\n        posts\n        .slice(offset, offset + limit)\n        .map((node, index) => (\n          <Link className=\"link\" to={node.slug} key={index}>\n            <ListCard\n              frontmatter={node.frontmatter}\n            >\n              {node.excerpt}\n            </ListCard>\n          </Link>\n        ))\n      }\n      <Pagination\n        total={posts.length}\n        limit={limit}\n        page={page}\n        line={line}\n        setPage={setPage}\n        setLine={setLine}\n      /> \n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery IndexQuery {\n  allMdx(sort: {fields: frontmatter___idx, order: DESC}) {\n    nodes {\n      id\n      slug\n      frontmatter {\n\t  \tidx\n        date(formatString: \"YYYY.MM.DD\")\n        category\n        title\n      }\n      excerpt(truncate: true)\n    }\n  }\n}\n`\n\nexport default IndexPage\n"],"names":["children","frontmatter","size","className","style","height","title","date","category","total","limit","page","line","setPage","setLine","numPages","Math","ceil","pages","idx","i","push","move","document","getElementsByClassName","scrollTo","onClick","disabled","map","key","length","data","React","offset","posts","allMdx","nodes","sort","o1","o2","Number","slice","node","index","Link","to","slug","excerpt"],"sourceRoot":""}