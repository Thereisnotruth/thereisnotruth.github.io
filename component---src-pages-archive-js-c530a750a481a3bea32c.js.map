{"version":3,"file":"component---src-pages-archive-js-c530a750a481a3bea32c.js","mappings":"8KA8GA,UAtGoB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACfC,EAAO,GACPC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC1C,MAAO,MAAO,MAAO,MAAO,OAC5CF,EAAKG,OAAOC,MAAMC,KAAI,SAACC,GAErB,IAAMC,EAAOD,EAAKE,YAAYP,KAAKQ,MAAM,KAAK,GACxCC,EAAQJ,EAAKE,YAAYP,KAAKQ,MAAM,KAAK,GACzCE,EAAML,EAAKE,YAAYP,KAAKQ,MAAM,KAAK,QAC1BG,IAAfX,EAAKM,IACPN,EAAKM,GAAQ,GACbN,EAAKM,GAAMG,GAAS,GACpBT,EAAKM,GAAMG,GAAOC,GAAO,CAACL,SACKM,IAAtBX,EAAKM,GAAMG,IACpBT,EAAKM,GAAMG,GAAS,GACpBT,EAAKM,GAAMG,GAAOC,GAAO,CAACL,SACUM,IAA3BX,EAAKM,GAAMG,GAAOC,GAC3BV,EAAKM,GAAMG,GAAOC,GAAO,CAACL,GAE1BL,EAAKM,GAAMG,GAAOC,GAAKE,KAAKP,MAyDhC,OACE,gBAAC,IAAD,KACE,uBAAKQ,UAAU,QACb,qCACA,uBAAKA,UAAU,WA1DJ,WACf,IAAMC,EAAM,GADS,WAGZR,GACPQ,EAAIF,KACF,uBACEC,UAAU,eACVE,IAAKT,GAEJA,IATc,eAYVG,GACPK,EAAIF,KACJ,uBACEC,UAAU,gBACVE,IAAKT,EAAKU,OAAOP,IAEhBR,EAAOQ,EAAQ,KAlBD,eAoBRC,GACPI,EAAIF,KACV,uBACQC,UAAU,cACVE,IAAKT,EAAKU,OAAOP,GAAOO,OAAON,IAE9BA,IAGHV,EAAKM,GAAMG,GAAOC,GAAKN,KAAI,SAACC,EAAMY,GACnB,IAAVA,GACDH,EAAIF,KACJ,uBACEC,UAAU,cACVE,IAAKT,EAAKU,OAAOP,GAAOO,OAAON,GAAKM,OAAOC,MAG/CH,EAAIF,KACF,gBAAC,EAAAM,KAAD,CACEL,UAAU,OACVM,GAAE,MAAQd,EAAKe,MACf,uBACEP,UAAU,gBACVE,IAAKT,EAAKU,OAAOP,GAAOO,OAAON,GAAKM,OAAOC,GAAOD,OAAOX,EAAKE,YAAYc,MAEzEhB,EAAKE,YAAYe,aAzB5B,IAAK,IAAIZ,KAAOV,EAAKM,GAAMG,GAAS,EAA3BC,IARX,IAAK,IAAID,KAAST,EAAKM,GAAQ,EAAtBG,IATX,IAAK,IAAIH,KAAQN,EAAO,EAAfM,GAiDT,OAAOQ,EAOAS","sources":["webpack://gatsby-starter-default/./src/pages/archive.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport \"../styles/card.css\"\r\nimport \"../styles/archive.css\"\r\n\r\nconst ArchivePage = ({ data }) => {\r\n  const date = {};\r\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\r\n                  \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  data.allMdx.nodes.map((node) => {\r\n    \r\n    const year = node.frontmatter.date.split('.')[0];\r\n    const month = node.frontmatter.date.split('.')[1];\r\n    const day = node.frontmatter.date.split('.')[2];\r\n    if (date[year] === undefined) {\r\n      date[year] = {};\r\n      date[year][month] = {};\r\n      date[year][month][day] = [node];\r\n    } else if (date[year][month] === undefined) {\r\n      date[year][month] = {};\r\n      date[year][month][day] = [node];\r\n    } else if (date[year][month][day] === undefined) {\r\n      date[year][month][day] = [node];\r\n    } else {\r\n      date[year][month][day].push(node);\r\n    }\r\n  });\r\n  const showDate = () => {\r\n    const ret = [];\r\n    \r\n    for (let year in date) { \r\n      ret.push(\r\n        <div\r\n          className=\"archive-year\"\r\n          key={year}\r\n        >\r\n          {year}\r\n        </div>);\r\n      \r\n      for (let month in date[year]) {\r\n        ret.push(\r\n        <div\r\n          className=\"archive-month\"\r\n          key={year.concat(month)}\r\n        >\r\n          {months[month - 1]}\r\n        </div>);\r\n        for (let day in date[year][month]) {\r\n          ret.push(\r\n\t\t  <div\r\n            className=\"archive-day\"\r\n            key={year.concat(month).concat(day)}\r\n          >\r\n            {day}\r\n          </div>)\r\n          \r\n          date[year][month][day].map((node, index) => {\r\n            if(index !== 0) {\r\n              ret.push(\r\n              <div\r\n                className=\"archive-day\"\r\n                key={year.concat(month).concat(day).concat(index)}\r\n              />)\r\n            }\r\n            ret.push(\r\n              <Link\r\n                className=\"link\"\r\n                to={`../${node.slug}`}>\r\n                <div\r\n                  className=\"archive-title\"\r\n                  key={year.concat(month).concat(day).concat(index).concat(node.frontmatter.idx)}\r\n                >\r\n                  {node.frontmatter.title}\r\n                </div>\r\n              </Link>)\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n  return (\r\n    <Layout>\r\n      <div className=\"card\">\r\n        <h2>Archive</h2>\r\n        <div className=\"archive\">\r\n          {showDate()}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(sort: {fields: frontmatter___idx, order: DESC}) {\r\n      nodes {\r\n        id\r\n        slug\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY.MM.DD\")\r\n          idx\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default ArchivePage\r\n"],"names":["data","date","months","allMdx","nodes","map","node","year","frontmatter","split","month","day","undefined","push","className","ret","key","concat","index","Link","to","slug","idx","title","showDate"],"sourceRoot":""}