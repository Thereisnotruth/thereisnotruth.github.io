{"version":3,"file":"component---src-pages-index-js-a8cd45ae35c412a85110.js","mappings":"mJA4BA,IAvBiB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzC,OACE,uBAAKC,UAAU,YAAYC,MAAO,CAACC,OAAQH,IACzC,0BACGD,EAAYK,OAEf,uBAAKH,UAAU,qBACZH,GAEH,uBAAKG,UAAU,kBACZF,EAAYM,MAEf,uBAAKJ,UAAU,sBACZF,EAAYO,a,mCC8DrB,IA1EmB,SAAC,GAIlB,IAJsE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACjDC,EAAWC,KAAKC,KAAKR,EAAQC,GAC7BQ,EAAQ,GACVC,EAAM,EACDC,EAAI,EAAGA,GAAKL,EAAUK,IACzBA,EAAI,IAAO,GACbF,EAAMG,KAAK,IAEbH,EAAMC,GAAKE,KAAKD,GACZA,EAAI,IAAO,GACbD,IAIJ,IAAMG,EAAO,SAACV,EAAMD,GAClBY,SAASC,uBAAuB,SAAS,GAAGC,SAAS,EAAG,GACxDX,EAAQF,GACRC,EAAQF,IAEV,OACE,uBAAKR,UAAU,cACb,0BACEA,UAAU,4BACVuB,QAAS,kBAAMJ,EAAK,EAAG,IACvBK,SAAmB,IAAThB,GAHZ,SAOA,0BACER,UAAU,oBACVuB,QAAS,kBAAMJ,EAAKV,EAAO,EAAgC,IAA5BI,KAAKC,KAAKN,EAAO,IAAM,KACtDgB,SAAmB,IAATf,GAHZ,KAQEM,EAAMN,EAAO,GACZgB,KAAI,SAACR,GAAD,OACH,0BACEjB,UAAU,oBACV0B,IAAKT,EAAI,EACTM,QAAS,kBAAMJ,EAAKV,EAAMQ,IAC1B,eAAcT,IAASS,EAAI,OAAS,MAEnCA,MAGP,0BACEjB,UAAU,oBACVuB,QAAS,kBAAMJ,EAAKV,EAAO,EAA0B,GAAvBI,KAAKC,KAAKN,EAAO,IAAW,IAC1DgB,SAAUf,IAASM,EAAMY,QAH3B,KAOA,0BACE3B,UAAU,2BACVuB,QAAS,kBAAMJ,EAAKJ,EAAMY,OAAQf,IAClCY,SAAUhB,IAASI,GAHrB,W,kFCDN,UApDkB,SAAC,GAAc,IAAZgB,EAAW,EAAXA,KACnB,EAAwBC,EAAAA,SAAe,GAAhCrB,EAAP,KAAaE,EAAb,KACA,EAAwBmB,EAAAA,SAAe,GAAhCpB,EAAP,KAAaE,EAAb,KAEMmB,EADQ,IACEtB,EAAO,GAEjBuB,EAAQH,EAAKI,OAAOC,MAE1B,OACE,gBAAC,IAAD,KAEIF,EACCG,MAAMJ,EAAQA,EATP,IAUPL,KAAI,SAACU,EAAMC,GAAP,OACH,gBAAC,EAAAC,KAAD,CAAMrC,UAAU,OAAOsC,GAAIH,EAAKI,KAAMb,IAAKU,GACzC,gBAAC,IAAD,CACEtC,YAAaqC,EAAKrC,aAEjBqC,EAAKK,aAKd,gBAAC,IAAD,CACElC,MAAOyB,EAAMJ,OACbpB,MAtBQ,GAuBRC,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTC,QAASA","sources":["webpack://gatsby-starter-default/./src/components/list_card.js","webpack://gatsby-starter-default/./src/components/pagination.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport \"../styles/list_card.css\"\r\n\r\nconst ListCard = ({ children, frontmatter, size }) => {\r\n  return (\r\n    <div className=\"list-card\" style={{height: size}}>\r\n      <h2>\r\n        {frontmatter.title}\r\n      </h2>\r\n      <div className=\"list-card-content\">\r\n        {children}\r\n      </div>\r\n      <div className=\"list-card-date\">\r\n        {frontmatter.date}\r\n      </div>\r\n      <div className=\"list-card-category\">\r\n        {frontmatter.category}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nListCard.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default ListCard\r\n\r\n","\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport \"../styles/pagination.css\"\r\n\r\nconst Pagination = ({ total, limit, page, line, setPage, setLine }) => {\r\n  const numPages = Math.ceil(total / limit);\r\n  const pages = [];\r\n  let idx = 0;\r\n  for (let i = 1; i <= numPages; i++) {\r\n    if (i % 10 === 1) {\r\n      pages.push([]);\r\n    }\r\n    pages[idx].push(i);\r\n    if (i % 10 === 0) {\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  const move = (line, page) => {\r\n    document.getElementsByClassName(\"right\")[0].scrollTo(0, 0);\r\n    setLine(line);\r\n    setPage(page);\r\n  }\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        className=\"pagination-button-tofirst\"\r\n        onClick={() => move(1, 1)}\r\n        disabled={page === 1}\r\n      >\r\n        First\r\n      </button>\r\n      <button\r\n        className=\"pagination-button\"\r\n        onClick={() => move(line - 1, (Math.ceil(page / 10) - 1) * 10)}\r\n        disabled={line === 1}\r\n      >\r\n        &lt;\r\n      </button>\r\n      {\r\n        pages[line - 1]\r\n        .map((i) => (\r\n          <button\r\n            className=\"pagination-button\"\r\n            key={i + 1}\r\n            onClick={() => move(line, i)}\r\n            aria-current={page === i ? \"page\" : null}\r\n          >\r\n            {i}\r\n          </button>\r\n        ))}\r\n      <button\r\n        className=\"pagination-button\"\r\n        onClick={() => move(line + 1, Math.ceil(page / 10) * 10 + 1)}\r\n        disabled={line === pages.length}\r\n      >\r\n        &gt;\r\n      </button>\r\n      <button\r\n        className=\"pagination-button-tolast\"\r\n        onClick={() => move(pages.length, numPages)}\r\n        disabled={page === numPages}\r\n      >\r\n        Last\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  limit: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  line: PropTypes.number.isRequired,\r\n  setPage: PropTypes.func.isRequired,\r\n  setLine: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport ListCard from \"../components/list_card\"\r\nimport Pagination from \"../components/pagination\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const [page, setPage] = React.useState(1);\r\n  const [line, setLine] = React.useState(1);\r\n  const limit = 10;\r\n  const offset = (page - 1) * limit;\r\n  \r\n  const posts = data.allMdx.nodes;\r\n\r\n  return (\r\n    <Layout>\r\n      {\r\n        posts\r\n        .slice(offset, offset + limit)\r\n        .map((node, index) => (\r\n          <Link className=\"link\" to={node.slug} key={index}>\r\n            <ListCard\r\n              frontmatter={node.frontmatter}\r\n            >\r\n              {node.excerpt}\r\n            </ListCard>\r\n          </Link>\r\n        ))\r\n      }\r\n      <Pagination\r\n        total={posts.length}\r\n        limit={limit}\r\n        page={page}\r\n        line={line}\r\n        setPage={setPage}\r\n        setLine={setLine}\r\n      /> \r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\nquery IndexQuery {\r\n  allMdx(sort: {fields: frontmatter___idx, order: DESC}) {\r\n    nodes {\r\n      id\r\n      slug\r\n      frontmatter {\r\n        date(formatString: \"YYYY.MM.DD\")\r\n        category\r\n        title\r\n      }\r\n      excerpt(truncate: true)\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default IndexPage\r\n"],"names":["children","frontmatter","size","className","style","height","title","date","category","total","limit","page","line","setPage","setLine","numPages","Math","ceil","pages","idx","i","push","move","document","getElementsByClassName","scrollTo","onClick","disabled","map","key","length","data","React","offset","posts","allMdx","nodes","slice","node","index","Link","to","slug","excerpt"],"sourceRoot":""}