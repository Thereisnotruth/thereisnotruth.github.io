{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/algorithm/220920_algo_1/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Baekjoon/G4/1707. 이분 그래프\",\n  \"date\": \"2022-09-20\",\n  \"category\": \"algorithm\",\n  \"idx\": \"24\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"G4) 1647. \\uB3C4\\uC2DC \\uBD84\\uD560 \\uACC4\\uD68D\"), mdx(\"h3\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uADF8\\uB798\\uD504\\uC758 \\uC815\\uC810\\uC758 \\uC9D1\\uD569\\uC744 \\uB458\\uB85C \\uBD84\\uD560\\uD558\\uC5EC, \\uAC01 \\uC9D1\\uD569\\uC5D0 \\uC18D\\uD55C \\uC815\\uC810\\uB07C\\uB9AC\\uB294 \\uC11C\\uB85C \\uC778\\uC811\\uD558\\uC9C0 \\uC54A\\uB3C4\\uB85D \\uBD84\\uD560\\uD560 \\uC218 \\uC788\\uC744 \\uB54C, \\uADF8\\uB7EC\\uD55C \\uADF8\\uB798\\uD504\\uB97C \\uD2B9\\uBCC4\\uD788 \\uC774\\uBD84 \\uADF8\\uB798\\uD504 (Bipartite Graph) \\uB77C \\uBD80\\uB978\\uB2E4.\"), mdx(\"p\", null, \"\\uADF8\\uB798\\uD504\\uAC00 \\uC785\\uB825\\uC73C\\uB85C \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uC774 \\uADF8\\uB798\\uD504\\uAC00 \\uC774\\uBD84 \\uADF8\\uB798\\uD504\\uC778\\uC9C0 \\uC544\\uB2CC\\uC9C0 \\uD310\\uBCC4\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h3\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uC785\\uB825\\uC740 \\uC5EC\\uB7EC \\uAC1C\\uC758 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uB85C \\uAD6C\\uC131\\uB418\\uC5B4 \\uC788\\uB294\\uB370, \\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uC758 \\uAC1C\\uC218 K\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uAC01 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uC758 \\uCCAB\\uC9F8 \\uC904\\uC5D0\\uB294 \\uADF8\\uB798\\uD504\\uC758 \\uC815\\uC810\\uC758 \\uAC1C\\uC218 V\\uC640 \\uAC04\\uC120\\uC758 \\uAC1C\\uC218 E\\uAC00 \\uBE48 \\uCE78\\uC744 \\uC0AC\\uC774\\uC5D0 \\uB450\\uACE0 \\uC21C\\uC11C\\uB300\\uB85C \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uAC01 \\uC815\\uC810\\uC5D0\\uB294 1\\uBD80\\uD130 V\\uAE4C\\uC9C0 \\uCC28\\uB840\\uB85C \\uBC88\\uD638\\uAC00 \\uBD99\\uC5B4 \\uC788\\uB2E4. \\uC774\\uC5B4\\uC11C \\uB458\\uC9F8 \\uC904\\uBD80\\uD130 E\\uAC1C\\uC758 \\uC904\\uC5D0 \\uAC78\\uCCD0 \\uAC04\\uC120\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uAC00 \\uC8FC\\uC5B4\\uC9C0\\uB294\\uB370, \\uAC01 \\uC904\\uC5D0 \\uC778\\uC811\\uD55C \\uB450 \\uC815\\uC810\\uC758 \\uBC88\\uD638 u, v (u \\u2260 v)\\uAC00 \\uBE48 \\uCE78\\uC744 \\uC0AC\\uC774\\uC5D0 \\uB450\\uACE0 \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"h3\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"K\\uAC1C\\uC758 \\uC904\\uC5D0 \\uAC78\\uCCD0 \\uC785\\uB825\\uC73C\\uB85C \\uC8FC\\uC5B4\\uC9C4 \\uADF8\\uB798\\uD504\\uAC00 \\uC774\\uBD84 \\uADF8\\uB798\\uD504\\uC774\\uBA74 YES, \\uC544\\uB2C8\\uBA74 NO\\uB97C \\uC21C\\uC11C\\uB300\\uB85C \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"\\uC81C\\uD55C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"2 \\u2264 K \\u2264 5\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"1 \\u2264 V \\u2264 20,000\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"1 \\u2264 E \\u2264 200,000\"))), mdx(\"h3\", null, \"\\uD480\\uC774\"), mdx(\"p\", null, \"\\uC774\\uBD84 \\uADF8\\uB798\\uD504(bipartite graph)\\uB780 \\uBAA8\\uB4E0 \\uB178\\uB4DC\\uB97C \\uBE68\\uAC15\\uACFC \\uD30C\\uB791\\uC73C\\uB85C \\uC0C9\\uCE60\\uD558\\uB418, \\uBAA8\\uB4E0 \\uBCC0\\uC774 \\uBE68\\uAC15\\uACFC \\uD30C\\uB791 \\uAF2D\\uC9D3\\uC810\\uC744 \\uD3EC\\uD568\\uD558\\uB3C4\\uB85D \\uC0C9\\uCE60\\uD560 \\uC218 \\uC788\\uB294 \\uADF8\\uB798\\uD504\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uC784\\uC758\\uC758 \\uB178\\uB4DC \\uD558\\uB098\\uB97C \\uACE8\\uB77C \\uADF8 \\uC9C0\\uC810\\uBD80\\uD130 \\uADF8\\uB798\\uD504 \\uD0D0\\uC0C9\\uC744 \\uC2DC\\uC791\\uD558\\uC5EC \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uAC00 \\uD604\\uC7AC \\uB178\\uB4DC\\uC640 \\uAC19\\uC740 \\uC0C9\\uC774\\uB77C\\uBA74 \\\"NO\\\"\\uB97C \\uCD9C\\uB825\\uD558\\uACE0, \\uADF8\\uB7EC\\uD55C \\uB178\\uB4DC\\uAC00 \\uC5C6\\uC73C\\uBA74 \\\"YES\\\"\\uB97C \\uCD9C\\uB825\\uD558\\uB3C4\\uB85D \\uAD6C\\uD604\\uD558\\uC600\\uB2E4.\"), mdx(\"p\", null, \"\\uAC01 \\uB178\\uB4DC\\uC758 \\uC0C9\\uC744 \\uC800\\uC7A5\\uD560 colors \\uBCC0\\uC218\\uB97C \\uB9CC\\uB4E4\\uC5B4 \\uC0C9\\uC774 \\uC815\\uD574\\uC9C0\\uC9C0 \\uC54A\\uC740 \\uCC98\\uC74C \\uC0C1\\uD0DC\\uB294 0, \\uBE68\\uAC04\\uC0C9\\uC774\\uBA74 1, \\uD30C\\uB780\\uC0C9\\uC774\\uBA74 -1\\uB85C \\uC815\\uD558\\uC5EC \\uC0C9\\uC744 \\uAD6C\\uBD84\\uD558\\uC600\\uB2E4.\"), mdx(\"h3\", null, \"\\uCF54\\uB4DC\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\\tstatic int K, V, E, u, v;\\n\\tstatic List[] graph;\\n\\tstatic int[] colors;\\n\\tstatic Queue<Integer> queue;\\n\\tstatic boolean flag;\\n\\n\\tpublic static void main(String[] args) throws Exception {\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\t\\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\\n\\t\\tStringBuilder sb = new StringBuilder();\\n\\t\\tStringTokenizer st;\\n\\n\\t\\tK = Integer.parseInt(br.readLine());\\n\\n\\t\\tfor (int k = 0; k < K; k++) {\\n\\t\\t\\tst = new StringTokenizer(br.readLine());\\n\\n\\t\\t\\tV = Integer.parseInt(st.nextToken());\\n\\t\\t\\tE = Integer.parseInt(st.nextToken());\\n\\n\\t\\t\\tcolors = new int[V + 1];\\n\\t\\t\\tqueue = new LinkedList<>();\\n\\t\\t\\tgraph = new ArrayList[V + 1];\\n\\t\\t\\tfor (int i = 1; i <= V; i++) {\\n\\t\\t\\t\\tgraph[i] = new ArrayList<Integer>();\\n\\t\\t\\t}\\n\\t\\t\\tflag = true;\\n\\n\\t\\t\\tfor (int i = 0; i < E; i++) {\\n\\t\\t\\t\\tst = new StringTokenizer(br.readLine());\\n\\n\\t\\t\\t\\tu = Integer.parseInt(st.nextToken());\\n\\t\\t\\t\\tv = Integer.parseInt(st.nextToken());\\n\\n\\t\\t\\t\\tgraph[u].add(v);\\n\\t\\t\\t\\tgraph[v].add(u);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (int i = 1; i <= V; i++) {\\n\\t\\t\\t\\tif (!flag) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (colors[i] == 0) {\\n\\t\\t\\t\\t\\tbfs(i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tsb.append(flag?\\\"YES\\\":\\\"NO\\\").append(\\\"\\\\n\\\");\\n\\t\\t}\\n\\t\\tbw.write(sb.toString());\\n\\t\\tbw.flush();\\n\\t\\tbr.close();\\n\\t\\tbw.close();\\n\\t}\\n\\n\\tstatic void bfs(int start) {\\n\\t\\tqueue.add(start);\\n\\t\\tcolors[start] = 1;\\n\\t\\twhile (!queue.isEmpty()) {\\n\\t\\t\\tint cur = queue.poll();\\n\\n\\t\\t\\tfor (int i = 0; i < graph[cur].size(); i++) {\\n\\t\\t\\t\\tint next = (int) graph[cur].get(i);\\n\\n\\t\\t\\t\\tif (colors[next] == colors[cur]) {\\n\\t\\t\\t\\t\\tflag = false;\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (colors[next] != 0) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (colors[cur] == 1) {\\n\\t\\t\\t\\t\\tcolors[next] = -1;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcolors[next] = 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tqueue.add(next);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n}\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Baekjoon/G4/1707. 이분 그래프","date":"2022.09.20","category":"algorithm"}}},"pageContext":{"slug":"algorithm/220920_algo_1/"}},
    "staticQueryHashes": ["63159454"]}