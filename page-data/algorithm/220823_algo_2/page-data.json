{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/algorithm/220823_algo_2/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Baekjoon/P5/2887. 행성 터널\",\n  \"date\": \"2022-08-23\",\n  \"category\": \"algorithm\",\n  \"idx\": \"10\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"P5) 2887. \\uD589\\uC131 \\uD130\\uB110\"), mdx(\"h3\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uB54C\\uB294 2040\\uB144, \\uC774\\uBBFC\\uD601\\uC740 \\uC6B0\\uC8FC\\uC5D0 \\uC790\\uC2E0\\uB9CC\\uC758 \\uC655\\uAD6D\\uC744 \\uB9CC\\uB4E4\\uC5C8\\uB2E4. \\uC655\\uAD6D\\uC740 N\\uAC1C\\uC758 \\uD589\\uC131\\uC73C\\uB85C \\uC774\\uB8E8\\uC5B4\\uC838 \\uC788\\uB2E4. \\uBBFC\\uD601\\uC774\\uB294 \\uC774 \\uD589\\uC131\\uC744 \\uD6A8\\uC728\\uC801\\uC73C\\uB85C \\uC9C0\\uBC30\\uD558\\uAE30 \\uC704\\uD574\\uC11C \\uD589\\uC131\\uC744 \\uC5F0\\uACB0\\uD558\\uB294 \\uD130\\uB110\\uC744 \\uB9CC\\uB4E4\\uB824\\uACE0 \\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uD589\\uC131\\uC740 3\\uCC28\\uC6D0 \\uC88C\\uD45C\\uC704\\uC758 \\uD55C \\uC810\\uC73C\\uB85C \\uC0DD\\uAC01\\uD558\\uBA74 \\uB41C\\uB2E4. \\uB450 \\uD589\\uC131 A(xA, yA, zA)\\uC640 B(xB, yB, zB)\\uB97C \\uD130\\uB110\\uB85C \\uC5F0\\uACB0\\uD560 \\uB54C \\uB4DC\\uB294 \\uBE44\\uC6A9\\uC740 min(|xA-xB|, |yA-yB|, |zA-zB|)\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uBBFC\\uD601\\uC774\\uB294 \\uD130\\uB110\\uC744 \\uCD1D N-1\\uAC1C \\uAC74\\uC124\\uD574\\uC11C \\uBAA8\\uB4E0 \\uD589\\uC131\\uC774 \\uC11C\\uB85C \\uC5F0\\uACB0\\uB418\\uAC8C \\uD558\\uB824\\uACE0 \\uD55C\\uB2E4. \\uC774\\uB54C, \\uBAA8\\uB4E0 \\uD589\\uC131\\uC744 \\uD130\\uB110\\uB85C \\uC5F0\\uACB0\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uCD5C\\uC18C \\uBE44\\uC6A9\\uC744 \\uAD6C\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h3\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uD589\\uC131\\uC758 \\uAC1C\\uC218 N\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 N \\u2264 100,000) \\uB2E4\\uC74C N\\uAC1C \\uC904\\uC5D0\\uB294 \\uAC01 \\uD589\\uC131\\uC758 x, y, z\\uC88C\\uD45C\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uC88C\\uD45C\\uB294 -1e9\\uBCF4\\uB2E4 \\uD06C\\uAC70\\uB098 \\uAC19\\uACE0, 1e9\\uBCF4\\uB2E4 \\uC791\\uAC70\\uB098 \\uAC19\\uC740 \\uC815\\uC218\\uC774\\uB2E4. \\uD55C \\uC704\\uCE58\\uC5D0 \\uD589\\uC131\\uC774 \\uB450 \\uAC1C \\uC774\\uC0C1 \\uC788\\uB294 \\uACBD\\uC6B0\\uB294 \\uC5C6\\uB2E4. \"), mdx(\"h3\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uBAA8\\uB4E0 \\uD589\\uC131\\uC744 \\uD130\\uB110\\uB85C \\uC5F0\\uACB0\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uCD5C\\uC18C \\uBE44\\uC6A9\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h3\", null, \"\\uD480\\uC774\"), mdx(\"p\", null, \"Kruskal \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uC0AC\\uC6A9\\uD574 \\uCD5C\\uC18C \\uC2E0\\uC7A5 \\uD2B8\\uB9AC\\uB97C \\uC0DD\\uC131\\uD558\\uB294 \\uBB38\\uC81C\\uC600\\uB2E4.\"), mdx(\"p\", null, \"\\uB178\\uB4DC(\\uD589\\uC131)\\uAC04 \\uAC00\\uC911\\uCE58\\uB294 \\uB450 \\uD589\\uC131\\uAC04\\uC758 x\\uC88C\\uD45C \\uCC28\\uC774\\uC758 \\uC808\\uB300\\uAC12, y\\uC88C\\uD45C \\uCC28\\uC774\\uC758 \\uC808\\uB300\\uAC12, z\\uC88C\\uD45C \\uCC28\\uC774\\uC758 \\uC808\\uB300\\uAC12 \\uC911 \\uCD5C\\uC18C\\uAC12\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0\"), mdx(\"p\", null, \"x, y, z\\uC88C\\uD45C\\uB4E4\\uC744 \\uAC01\\uAC01 \\uB2E4\\uB978 \\uBC30\\uC5F4\\uC5D0 \\uC800\\uC7A5\\uD55C \\uD6C4 \\uD589\\uC131\\uAC04 \\uC88C\\uD45C \\uAC12\\uC758 \\uCC28\\uC774\\uB97C \\uCD5C\\uC18C\\uB85C \\uD558\\uAE30 \\uC704\\uD574 \\uC624\\uB984\\uCC28\\uC21C\\uC73C\\uB85C \\uC815\\uB82C\\uD574\\uC8FC\\uC5C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uD6C4 \\uD589\\uC131\\uAC04\\uC758 \\uC88C\\uD45C \\uCC28\\uC774\\uB97C \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uC9D1\\uC5B4\\uB123\\uACE0, Kruskal \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uC801\\uC6A9\\uD558\\uC5EC \\uB2F5\\uC744 \\uAD6C\\uD588\\uB2E4.\"), mdx(\"h3\", null, \"\\uCF54\\uB4DC\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"\\nimport java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\tstatic int N;\\n\\tstatic long ans;\\n\\tstatic int[] parents;\\n\\tstatic Node[] arrX, arrY, arrZ;\\n\\tstatic class Node implements Comparable<Node> {\\n\\t\\tint num, value;\\n\\t\\tpublic Node (int num, int value) {\\n\\t\\t\\tthis.num = num;\\n\\t\\t\\tthis.value = value;\\n\\t\\t}\\n\\t\\t\\n\\t\\t@Override\\n\\t\\tpublic int compareTo(Node node) {\\n\\t\\t\\treturn this.value - node.value;\\n\\t\\t}\\n\\t}\\n\\tstatic int find_parent(int n) {\\n\\t\\tif (parents[n] != n) {\\n\\t\\t\\tparents[n] = find_parent(parents[n]);\\n\\t\\t}\\n\\t\\treturn parents[n];\\n\\t}\\n\\tstatic void union(int a, int b) {\\n\\t\\ta = find_parent(a);\\n\\t\\tb = find_parent(b);\\n\\t\\t\\n\\t\\tif (a > b) {\\n\\t\\t\\tparents[b] = a;\\n\\t\\t} else {\\n\\t\\t\\tparents[a] = b;\\n\\t\\t}\\n\\t}\\n\\tstatic class Edge implements Comparable<Edge> {\\n\\t\\tint from, to, cost;\\n\\t\\tpublic Edge (int from, int to, int cost) {\\n\\t\\t\\tthis.from = from;\\n\\t\\t\\tthis.to = to;\\n\\t\\t\\tthis.cost = cost;\\n\\t\\t}\\n\\t\\t\\n\\t\\t@Override\\n\\t\\tpublic int compareTo(Edge e) {\\n\\t\\t\\treturn this.cost - e.cost;\\n\\t\\t}\\n\\t}\\n\\tstatic PriorityQueue<Edge> pq;\\n\\tpublic static void main (String[] args) throws Exception {\\n\\t\\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\t\\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\\n\\t\\tStringTokenizer st;\\n\\t\\t\\n\\t\\tN = Integer.parseInt(br.readLine());\\n\\t\\t\\n\\t\\tparents = new int[N];\\n\\t\\tfor (int i = 0; i < N; i++) {\\n\\t\\t\\tparents[i] = i;\\n\\t\\t}\\n\\t\\tarrX = new Node[N];\\n\\t\\tarrY = new Node[N];\\n\\t\\tarrZ = new Node[N];\\n\\t\\tpq = new PriorityQueue<>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i < N; i++) {\\n\\t\\t\\tst = new StringTokenizer(br.readLine());\\n\\t\\t\\t\\n\\t\\t\\tint x = Integer.parseInt(st.nextToken());\\n\\t\\t\\tint y = Integer.parseInt(st.nextToken());\\n\\t\\t\\tint z = Integer.parseInt(st.nextToken());\\n\\t\\t\\t\\n\\t\\t\\tarrX[i] = new Node(i, x);\\n\\t\\t\\tarrY[i] = new Node(i, y);\\n\\t\\t\\tarrZ[i] = new Node(i, z);\\n\\t\\t}\\n\\t\\t\\n\\t\\tArrays.sort(arrX);\\n\\t\\tArrays.sort(arrY);\\n\\t\\tArrays.sort(arrZ);\\n\\t\\t\\n\\t\\tfor (int i = 0; i < N - 1; i++) {\\n\\t\\t\\tpq.add(new Edge(arrX[i].num, arrX[i + 1].num, arrX[i + 1].value - arrX[i].value));\\n\\t\\t\\tpq.add(new Edge(arrY[i].num, arrY[i + 1].num, arrY[i + 1].value - arrY[i].value));\\n\\t\\t\\tpq.add(new Edge(arrZ[i].num, arrZ[i + 1].num, arrZ[i + 1].value - arrZ[i].value));\\n\\t\\t}\\n\\t\\t\\n\\t\\twhile (!pq.isEmpty()) {\\n\\t\\t\\tEdge cur = pq.poll();\\n\\t\\t\\t\\n\\t\\t\\tif (find_parent(cur.from) == find_parent(cur.to)) continue;\\n\\t\\t\\t\\n\\t\\t\\tans += cur.cost;\\n\\t\\t\\tunion(cur.from, cur.to);\\n\\t\\t}\\n\\t\\t\\n\\t\\tbw.write(ans + \\\"\\\\n\\\");\\n\\t\\tbw.flush();\\n\\t\\tbr.close();\\n\\t\\tbw.close();\\n\\t}\\n}\\n\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Baekjoon/P5/2887. 행성 터널","date":"2022.08.23","category":"algorithm"}}},"pageContext":{"slug":"algorithm/220823_algo_2/"}},
    "staticQueryHashes": ["3190259125","63159454"]}