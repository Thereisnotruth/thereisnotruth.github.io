{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/algorithm/220808_algo_1/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"순열, 중복순열, 조합, 중복조합\",\n  \"date\": \"2022-08-08\",\n  \"category\": \"algorithm\",\n  \"idx\": \"4\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uC21C\\uC5F4\"), mdx(\"p\", null, \"\\uC11C\\uB85C \\uB2E4\\uB978 n\\uAC1C\\uC758 \\uC6D0\\uC18C \\uC911\\uC5D0\\uC11C \\uC911\\uBCF5 \\uC5C6\\uC774 r\\uAC1C\\uB97C \\uACE8\\uB77C \\uC21C\\uC11C\\uB300\\uB85C \\uB098\\uC5F4\\uD558\\uB294 \\uAC83\"), mdx(\"p\", null, \"nPr = n! / (n - r)!\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// \\uC21C\\uC5F4\\nboolean[] isSelected = new boolean[N + 1];\\nint[] numbers = new numbers[N + 1];\\n\\npublic void perm(int cnt) {\\n  if (cnt == R) {\\n    System.out.println(Arrays.toString(numbers));\\n    return;\\n  }\\n  for (int i = 1; i <= N; i++) {\\n    if (isSelected[i]) continue;\\n    numbers[cnt] = i;\\n    isSelected[i] = true;\\n    perm(cnt + 1);\\n    isSelected[i] = false;\\n  }\\n}\"), \"\\n        \"), mdx(\"h3\", null, \"\\uC911\\uBCF5 \\uC21C\\uC5F4\"), mdx(\"p\", null, \"\\uC11C\\uB85C \\uB2E4\\uB978 n\\uAC1C\\uC758 \\uC6D0\\uC18C \\uC911\\uC5D0\\uC11C \\uC911\\uBCF5\\uC744 \\uD5C8\\uC6A9\\uD558\\uC5EC r\\uAC1C\\uB97C \\uACE8\\uB77C \\uC21C\\uC11C\\uB300\\uB85C \\uB098\\uC5F4\\uD558\\uB294 \\uAC83\"), mdx(\"p\", null, \"n\\u03A0r = n^r\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// \\uC911\\uBCF5 \\uC21C\\uC5F4\\nint[] numbers = new int[N + 1];\\n\\npublic void perm2(int cnt) {\\n  if (cnt == R) {\\n    System.out.println(Arrays.toString(numbers));\\n    return;\\n  }\\n  for (int i = 1; i <= N; i++) {\\n    numbers[cnt] = i;\\n    perm2(cnt + 1);\\n  }\\n}\"), \"\\n        \"), mdx(\"h3\", null, \"\\uC870\\uD569\"), mdx(\"p\", null, \"\\uC11C\\uB85C \\uB2E4\\uB978 n\\uAC1C\\uC758 \\uC6D0\\uC18C \\uC911\\uC5D0\\uC11C \\uC911\\uBCF5\\uC5C6\\uC774 r\\uAC1C\\uB97C \\uC120\\uD0DD\\uD558\\uB294 \\uAC83\"), mdx(\"p\", null, \"\\uC21C\\uC11C\\uB294 \\uACE0\\uB824\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4.\"), mdx(\"p\", null, \"nCr = n! / ((n - r)! * r!)\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// \\uC870\\uD569\\nint[] numbers = new int[N + 1];\\n\\npublic void comb(int cnt, int start) {\\n  if (cnt == R) {\\n    System.out.println(Arrays.toString(numbers));\\n    return;\\n  }\\n  for (int i = start; i <= N; i++) {\\n    numbers[i] = i;\\n    comb(cnt + 1, i + 1);\\n  }\\n}\"), \"\\n        \"), mdx(\"h3\", null, \"\\uC911\\uBCF5 \\uC870\\uD569\"), mdx(\"p\", null, \"\\uC11C\\uB85C \\uB2E4\\uB978 n\\uAC1C\\uC758 \\uC6D0\\uC18C \\uC911\\uC5D0\\uC11C \\uC911\\uBCF5\\uC744 \\uD5C8\\uB77D\\uD558\\uC5EC r\\uAC1C\\uB97C \\uC120\\uD0DD\\uD558\\uB294 \\uAC83\"), mdx(\"p\", null, \"\\uC21C\\uC11C\\uB294 \\uACE0\\uB824\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4.\"), mdx(\"p\", null, \"nHr = (n+r-1)Cr\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"int[] numbers = new int[N + 1];\\n\\npublic void comb(int cnt, int start) {\\n  if (cnt == R) {\\n    System.out.println(Arrays.toString(numbers));\\n    return;\\n  }\\n  for (int i = start; i <= N; i++) {\\n    numbers[i] = i;\\n    comb(cnt + 1, i);\\n  }\\n}\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"순열, 중복순열, 조합, 중복조합","date":"2022.08.08","category":"algorithm"}}},"pageContext":{"slug":"algorithm/220808_algo_1/"}},
    "staticQueryHashes": ["3190259125","63159454"]}