{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/algorithm/220802_algo_1/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"SWEA/D3/1289. 원재의 메모리 복구하기\",\n  \"date\": \"2022-08-02\",\n  \"category\": \"algorithm\",\n  \"idx\": \"1\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"D3) 1289. \\uC6D0\\uC7AC\\uC758 \\uBA54\\uBAA8\\uB9AC \\uBCF5\\uAD6C\\uD558\\uAE30\"), mdx(\"h3\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uC6D0\\uC7AC\\uAC00 \\uCEF4\\uD4E8\\uD130\\uB97C \\uB9CC\\uC9C0\\uB2E4\\uAC00 \\uC2E4\\uC218\\uB97C \\uC800\\uC9C0\\uB974\\uACE0 \\uB9D0\\uC558\\uB2E4. \\uBA54\\uBAA8\\uB9AC\\uAC00 \\uCD08\\uAE30\\uD654\\uB41C \\uAC83\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uB2E4\\uD589\\uD788 \\uC6D0\\uB798 \\uBA54\\uBAA8\\uB9AC\\uAC00 \\uBB34\\uC2A8 \\uAC12\\uC774\\uC5C8\\uB294\\uC9C0 \\uC54C\\uACE0 \\uC788\\uC5C8\\uB358 \\uC6D0\\uC7AC\\uB294 \\uBC14\\uB85C \\uC6D0\\uB798 \\uAC12\\uC73C\\uB85C \\uB418\\uB3CC\\uB9AC\\uB824\\uACE0 \\uD588\\uC73C\\uB098 \\uBA54\\uBAA8\\uB9AC \\uAC12\\uC744 \\uBC14\\uAFC0 \\uB54C \\uB610 \\uBB38\\uC81C\\uAC00 \\uC0DD\\uACBC\\uB2E4.\"), mdx(\"p\", null, \"\\uBA54\\uBAA8\\uB9AC bit\\uC911 \\uD558\\uB098\\uB97C \\uACE8\\uB77C 0\\uC778\\uC9C0 1\\uC778\\uC9C0 \\uACB0\\uC815\\uD558\\uBA74 \\uD574\\uB2F9 \\uAC12\\uC774 \\uBA54\\uBAA8\\uB9AC\\uC758 \\uB05D\\uAE4C\\uC9C0 \\uB36E\\uC5B4\\uC50C\\uC6B0\\uB294 \\uAC83\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4 \\uC9C0\\uAE08 \\uBA54\\uBAA8\\uB9AC \\uAC12\\uC774 0100\\uC774\\uACE0, 3\\uBC88\\uC9F8 bit\\uB97C \\uACE8\\uB77C 1\\uB85C \\uC124\\uC815\\uD558\\uBA74 0111\\uC774 \\uB41C\\uB2E4.\"), mdx(\"p\", null, \"\\uC6D0\\uB798 \\uC0C1\\uD0DC\\uAC00 \\uC8FC\\uC5B4\\uC9C8 \\uB54C \\uCD08\\uAE30\\uD654 \\uC0C1\\uD0DC (\\uBAA8\\uB4E0 bit\\uAC00 0) \\uC5D0\\uC11C \\uC6D0\\uB798 \\uC0C1\\uD0DC\\uB85C \\uB3CC\\uC544\\uAC00\\uB294\\uB370 \\uCD5C\\uC18C \\uBA87 \\uBC88\\uC774\\uB098 \\uACE0\\uCCD0\\uC57C \\uD558\\uB294\\uC9C0 \\uACC4\\uC0B0\\uD574\\uBCF4\\uC790.\"), mdx(\"h3\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB \\uBC88\\uC9F8 \\uC904\\uC5D0 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uC758 \\uC218 T\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"p\", null, \"\\uAC01 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uB294 \\uD55C \\uC904\\uB85C \\uC774\\uB8E8\\uC5B4\\uC838 \\uC788\\uC73C\\uBA70, \\uBA54\\uBAA8\\uB9AC\\uC758 \\uC6D0\\uB798 \\uAC12\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"p\", null, \"\\uBA54\\uBAA8\\uB9AC\\uC758 \\uAE38\\uC774\\uB294 1\\uC774\\uC0C1 50\\uC774\\uD558\\uC774\\uB2E4.\"), mdx(\"h3\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uAC01 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uB9C8\\uB2E4 \\u2018#x\\u2019(x\\uB294 \\uD14C\\uC2A4\\uD2B8\\uCF00\\uC774\\uC2A4 \\uBC88\\uD638\\uB97C \\uC758\\uBBF8\\uD558\\uBA70 1\\uBD80\\uD130 \\uC2DC\\uC791\\uD55C\\uB2E4)\\uB97C \\uCD9C\\uB825\\uD558\\uACE0,\"), mdx(\"p\", null, \"\\uCD08\\uAE30\\uAC12(\\uBAA8\\uB4E0bit\\uAC00 0)\\uC5D0\\uC11C \\uC6D0\\uB798 \\uAC12\\uC73C\\uB85C \\uBCF5\\uAD6C\\uD558\\uAE30 \\uC704\\uD55C \\uCD5C\\uC18C \\uC218\\uC815 \\uD69F\\uC218\\uB97C \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h3\", null, \"\\uD480\\uC774\"), mdx(\"p\", null, \"\\uC778\\uC811\\uD55C \\uBE44\\uD2B8\\uAC00 \\uC11C\\uB85C \\uB2E4\\uB974\\uAC8C \\uB098\\uC628 \\uD69F\\uC218\\uB97C \\uC138\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"p\", null, \"\\uC2DC\\uC791 \\uBE44\\uD2B8\\uAC00 1\\uC77C \\uACBD\\uC6B0 \\uAC1C\\uC218\\uB97C \\uD558\\uB098 \\uCD94\\uAC00\\uD574\\uC900\\uB2E4.\"), mdx(\"h3\", null, \"\\uCF54\\uB4DC\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"java\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"\\nimport java.util.*;\\n\\npublic class Solution {\\n\\tstatic int T, ans;\\n\\tstatic String input;\\n\\tpublic static void main(String[] args) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tScanner sc = new Scanner(System.in);\\n\\t\\tStringBuilder sb = new StringBuilder();\\n\\n\\t\\tT = sc.nextInt();\\n\\t\\t\\n\\t\\tfor (int t = 1; t <= T; t++) {\\n\\t\\t\\tinput = sc.next();\\n\\t\\t\\t\\n\\t\\t\\tint pre = input.charAt(0) - '0';\\n\\t\\t\\tans = 0;\\n\\t\\t\\t\\n\\t\\t\\tif (pre == 1) {\\n\\t\\t\\t\\tans++;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tfor (int i = 1; i < input.length(); i++) {\\n\\t\\t\\t\\tint cur = input.charAt(i) - '0';\\n\\t\\t\\t\\tif ((cur ^ pre) == 1) {\\n\\t\\t\\t\\t\\tpre = cur;\\n\\t\\t\\t\\t\\tans++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tsb.append(\\\"#\\\");\\n\\t\\t\\tsb.append(t);\\n\\t\\t\\tsb.append(\\\" \\\");\\n\\t\\t\\tsb.append(ans);\\n\\t\\t\\tsb.append(\\\"\\\\n\\\");\\n\\t\\t}\\n\\t\\tSystem.out.println(sb.toString());\\n\\t}\\n\\n}\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"SWEA/D3/1289. 원재의 메모리 복구하기","date":"2022.08.02","category":"algorithm"}}},"pageContext":{"slug":"algorithm/220802_algo_1/"}},
    "staticQueryHashes": ["3190259125","63159454"]}